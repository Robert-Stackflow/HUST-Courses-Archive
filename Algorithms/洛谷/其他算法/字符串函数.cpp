#include<stdio.h>
#include<string.h>
#include<ctype.h>
void reverse(char *s);
void reverse1(char *s,char *t);
int atoe(int base,char*s);
void itoa(int n,int base,char*s);
double atof(char *s); 
char* mystrchr(char *s,char t);
char* mystrrchr(char *s,char t);
char* mystrrchr_new(char *s,char t,int n);
char* mystrstr(char *s,char *t); 
char* mystrstr_new(char *s,char *t,int n); 
int my_del(char*s,char*t);
void my_del1(char*s,char*t,int n);
unsigned my_strlen(char*s);
char* my_strcpy(char*s,char*t);
char* my_strncpy(char*s,char*t,int n);
char* my_strcat(char*s,char*t);
char* my_strncat(char*s,char*t,int n);
int my_strcmp(char*s,char*t);
char* my_strncmp(char*s,char*t,int n);
char*ispalindrome(char*s);
char* my_strncmp(char*s[]);
char* my_compare(char*s,char*t);
char* my_upper(char*s);
char* my_upper_new(char*s);
char* my_lower(char*s);
char* my_change(char*s);

int main(void)
{

{//下面的代码用来检测反转函数
	char s[100],t[100];
	scanf("%s%s",s,t);
	int n;
	reverse(s);
	printf("%s\n",s);
	reverse1(s,t);
	printf("%s  %s\n",s,t);
	printf("%s\n",strrev(s));
}
{//下面的代码用来检测数值和字符串之间的转换的函数
//	int n,base;
//	char s[100];
//	scanf("%d%d%s",&n,&base,s);
//	printf("After transform,we get \"%s\"\n",atoe(base,s));
//	printf("We change the %d into string \"%s\"\n",n,s);
}
{//下面的代码用来检测双精度浮点数和字符串之间的转换的函数
//	char str[100];
//	printf("Input the precision you want to get(the number of decimals):");
//	//输入要得到的实际精度 
//	int m;
//	scanf("%d",&m);
//	while(scanf("%s",str)!=EOF) printf("%.*f\n",m,atof(str));
//	//按精度输出 
}
}

/****************************************************************
函数名称：reverse
函数功能：直接在原来的字符数组中将字符串反转颠倒 
函数参数：一个字符数组 
函数返回值：无返回值
*****************************************************************/
void reverse(char *s)
{
	int c,j,k;
	for(j=0,k=strlen(s)-1;j<k;j++,k--)
		c=s[j],s[j]=s[k],s[k]=c;
}	


/****************************************************************
函数名称：reverse1
函数功能：将字符串反转颠倒后存入新的数组中 
函数参数：两个字符数组 
函数返回值：无返回值 
*****************************************************************/
void reverse1(char*s,char*t)
{
	int j,k;
	for(j=0,k=strlen(s)-1;j<strlen(s);j++,k--)
		t[k]=s[j];
	t[strlen(s)]='\0';
}	


/****************************************************************
函数名称：atoe
函数功能：将任意进制的字符串转换为十进制数
函数参数：进制数，在该进制下的字符串 
函数返回值：返回得到的十进制数 
*****************************************************************/
int atoe(int base,char*str)//将字符串转换为十进制数 
{
	int j=0,num=0;
	for(;str[j]!='\0';j++)
	{
		if(str[j]>='0'&&str[j]<='9') num=num*base+str[j]-'0';
		if(str[j]>='a'&&str[j]<='z') num=num*base+str[j]-'a'+10;
		if(str[j]>='A'&&str[j]<='Z') num=num*base+str[j]-'A'+10;
	}
	return num;
}	


/****************************************************************
函数名称：itoa
函数功能：将一个十进制数转换为任意进制下的字符串 
函数参数：一个十进制数，欲得到的字符串的进制数，要存入得到的字符串的字符数组 
函数返回值：无返回值
*****************************************************************/
void itoa(int n,int base,char*s)
{
	int sign,j=0;
	if((sign=n)<0) n=-n;
	while(n>0)
	{
		s[j++]=n%base+'0';
		n/=base;
	}
	if(sign<0) s[j++]='-';
	s[j]='\0';
	reverse(s);
}


/****************************************************************
函数名称：atof
函数功能：将字符串转换为双精度浮点数 
函数参数：一个字符数组 
函数返回值：返回得到了双精度浮点数 
*****************************************************************/
double atof(char *s)
{
	double val,power;
	int exp,sign,i=0;
	while(isspace(s[i])) i++;
	sign=(s[i]=='-')?-1:1;
	if(s[i]=='+'||s[i]=='-') i++;
	for(val=0;isdigit(s[i]);i++)
		val+=10*val+(s[i]-'0');
	if(s[i]=='.')
	for(i++,power=0.1;isdigit(s[i]);i++,power*=0.1)
		val+=(s[i]-'0')*power;
	val*=sign;
	if(s[i]=='e'||s[i]=='E')
	{
		i++;
		power=(s[i]=='-')?0.1:10;
		if(s[i]=='+'||s[i]=='-') i++;
		for(exp=0;isdigit(s[i]);i++)
			exp=exp*10+(s[i]-'0');
		while(exp--) val*=power;
	}
	return val;
}
/****************************************************************
函数名称：mystrchr 
函数功能：在字符串s中找字符t 
函数参数：字符串s，字符t 
函数返回值：返回第一次出现字符的位置，找不到则返回NULL 
备注：该函数对应标准库函数strchr 
*****************************************************************/
char* mystrchr(char *s,char t)
{
	
}	


/****************************************************************
函数名称：mystrrchr 
函数功能：在字符串s中找字符t 
函数参数：字符串s，字符t 
函数返回值：返回最后一次出现字符的位置，找不到则返回NULL 
备注：该函数对应标准库函数strrchr 
*****************************************************************/
char* mystrrchr(char *s,char t)
{
	
}


/****************************************************************
函数名称：mystrrchr_new 
函数功能：在字符串s中找字符t 
函数参数：字符串s，字符t，int型n 
函数返回值：返回指定序次n出现字符的位置，找不到则返回NULL 
*****************************************************************/
char* mystrrchr_new(char *s,char t,int n)
{
	
}	


/****************************************************************
函数名称：mystrstr
函数功能：在字符串s中找子串t 
函数参数：字符串s，t 
函数返回值：返回第一次出现子串的位置，找不到则返回NULL 
备注：该函数对应标准库函数strstr 
*****************************************************************/
char* mystrstr(char *s,char *t)
{
	
}


/****************************************************************
函数名称：mystrstr_new
函数功能：在字符串s中找子串t 
函数参数：字符串s，t，int型数据n 
函数返回值：返回第n次出现子串的位置，找不到则返回NULL 
*****************************************************************/
char* mystrstr_new(char *s,char *t,int n)
{
	
}	


/****************************************************************
函数名称：my_del
函数功能：在字符串s中找子串t并删除全部该子串 
函数参数：字符串s，t 
函数返回值：删除的子串个数 
*****************************************************************/
int my_del(char*s,char*t)
{
	
} 	


/****************************************************************
函数名称：my_del1
函数功能：在字符串s中找子串t并删除出现的指定位次的该子串 
函数参数：字符串s，t ，欲删除字串的序号n 
函数返回值：无返回值 
*****************************************************************/
void my_del1(char*s,char*t,int n)
{
	
}	


/****************************************************************
函数名称：my_strlen
函数功能：返回字符串长度(不包括'\0') 
函数参数：字符串s
函数返回值：返回一个无符号整数
备注：对应标准库函数strlen 
*****************************************************************/
unsigned my_strlen(char*s)
{
	
}	


/****************************************************************
函数名称：my_strcpy
函数功能：复制字符串t到另一个数组s中 
函数参数：字符串s,t 
函数返回值：返回s 
备注：对应标准库函数strcpy 
*****************************************************************/
char* my_strcpy(char*s,char*t)
{
	
}	


/****************************************************************
函数名称：my_strncpy
函数功能：复制字符串t的至多前n个字符到另一个数组s中 
函数参数：字符串s,t,int类型n 
函数返回值：返回s
备注：对应标准库函数strncpy 
*****************************************************************/
char* my_strncpy(char*s,char*t,int n)
{
	
}	


/****************************************************************
函数名称：my_strcat
函数功能：连接字符串t到另一个数组s后 
函数参数：字符串s,t 
函数返回值：返回s 
备注：对应标准库函数strcat 
*****************************************************************/
char* my_strcat(char*s,char*t)
{
	
}	


/****************************************************************
函数名称：my_strncat
函数功能：连接字符串t的至多前n个字符到另一个数组s后 
函数参数：字符串s,t,int类型n 
函数返回值：返回s 
备注：对应标准库函数strncat 
*****************************************************************/
char* my_strncat(char*s,char*t,int n)
{
	
}	


/****************************************************************
函数名称：my_strcmp
函数功能：比较两个字符串 
函数参数：字符串s,t 
函数返回值：返回一个整型数据
备注：对应标准库函数strcmp
*****************************************************************/
int my_strcmp(char*s,char*t)
{
	
}	


/****************************************************************
函数名称：my_strncmp
函数功能：至多比较两个字符串的前n个字符 
函数参数：字符串s,t,int类型n 
函数返回值：返回一个整型数据
备注：对应标准库函数strncmp 
*****************************************************************/
char* my_strncmp(char*s,char*t,int n)
{
	
}	


/****************************************************************
函数名称：ispalindrome
函数功能：判断是否为回文串 
函数参数：字符串s 
函数返回值：返回1或者0 
*****************************************************************/
char*ispalindrome(char*s)
{
	
}


/****************************************************************
函数名称：sort_strs
函数功能：将指针数组指向的字符串进行排序 
函数参数：指针数组s 
函数返回值：返回指针数组的地址
*****************************************************************/
char* my_strncmp(char*s[])
{
	
}	


/****************************************************************
函数名称：my_compare
函数功能：比较找出两个字符串最长相同的子串 
函数参数：字符串s,t 
函数返回值：返回一个指针指向该子串 
*****************************************************************/
char* my_compare(char*s,char*t)
{
	
}	


/****************************************************************
函数名称：my_upper
函数功能：将字符串中的小写字母转换为大写 
函数参数：字符串s
函数返回值：返回该字符串 
*****************************************************************/
char* my_upper(char*s)
{
	
}	


/****************************************************************
函数名称：my_upper_new 
函数功能：将字符串中的空格后的单词的首字母转换为大写 
函数参数：字符串s
函数返回值：返回该字符串 
*****************************************************************/
char* my_upper_new(char*s)
{
	
}	


/****************************************************************
函数名称：my_lower
函数功能：将字符串中的大写字母转换为小写 
函数参数：字符串s
函数返回值：返回该字符串 
*****************************************************************/
char* my_lower(char*s)
{
	
}	


/****************************************************************
函数名称：my_change
函数功能：将字符串的大小写互换 
函数参数：字符串s
函数返回值：返回该字符串 
*****************************************************************/
char* my_change(char*s)
{
	
}	


