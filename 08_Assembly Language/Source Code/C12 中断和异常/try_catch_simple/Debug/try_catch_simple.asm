; Listing generated by Microsoft (R) Optimizing Compiler Version 19.22.27905.0 

	TITLE	C:\新书示例\C12 中断和异常\try_catch_simple\try_catch_simple.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__D559217A_try_catch_simple@c DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0BH@MMMFMBDH@enter?5try?5block?5?4?4?4?4?4?6@ ; `string'
PUBLIC	??_C@_0CD@JPAGMIHA@This?5message?5will?5not?5occur?5?4?4?4@ ; `string'
PUBLIC	??_C@_0CF@NDLHPMFO@exception?5is?5processing?5?5?4?4?4?4?5o@ ; `string'
PUBLIC	??_C@_0CA@OIJMOIKJ@program?5?5continue?5?4?4?4?4?4?5hello?5?6@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__except_handler4:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0CA@OIJMOIKJ@program?5?5continue?5?4?4?4?4?4?5hello?5?6@
CONST	SEGMENT
??_C@_0CA@OIJMOIKJ@program?5?5continue?5?4?4?4?4?4?5hello?5?6@ DB 'progra'
	DB	'm  continue ..... hello ', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NDLHPMFO@exception?5is?5processing?5?5?4?4?4?4?5o@
CONST	SEGMENT
??_C@_0CF@NDLHPMFO@exception?5is?5processing?5?5?4?4?4?4?5o@ DB 'exceptio'
	DB	'n is processing  .... over ', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JPAGMIHA@This?5message?5will?5not?5occur?5?4?4?4@
CONST	SEGMENT
??_C@_0CD@JPAGMIHA@This?5message?5will?5not?5occur?5?4?4?4@ DB 'This mess'
	DB	'age will not occur .....', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MMMFMBDH@enter?5try?5block?5?4?4?4?4?4?6@
CONST	SEGMENT
??_C@_0BH@MMMFMBDH@enter?5try?5block?5?4?4?4?4?4?6@ DB 'enter try block .'
	DB	'....', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__sehtable$_main DD 0fffffffeH
	DD	00H
	DD	0fffffef4H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:$LN13@main
	DD	FLAT:$LN6@main
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\新书示例\C12 中断和异常\try_catch_simple\try_catch_simple.c
;	COMDAT _main
_TEXT	SEGMENT
_result$ = -56						; size = 4
_y$ = -44						; size = 4
_x$ = -32						; size = 4
__$SEHRec$ = -24					; size = 24
_main	PROC						; COMDAT

; 7    : int main() {

	push	ebp
	mov	ebp, esp
	push	-2					; fffffffeH
	push	OFFSET __sehtable$_main
	push	OFFSET __except_handler4
	mov	eax, DWORD PTR fs:0
	push	eax
	add	esp, -236				; ffffff14H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	DWORD PTR __$SEHRec$[ebp+16], eax
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$SEHRec$[ebp], esp
	mov	ecx, OFFSET __D559217A_try_catch_simple@c
	call	@__CheckForDebuggerJustMyCode@4

; 8    : 
; 9    : 	int  x = 10;

	mov	DWORD PTR _x$[ebp], 10			; 0000000aH

; 10   : 	int  y = 0;

	mov	DWORD PTR _y$[ebp], 0

; 11   : 	int  result;
; 12   : 
; 13   : 	__try {

	mov	DWORD PTR __$SEHRec$[ebp+20], 0

; 14   : 		printf("enter try block .....\n");

	push	OFFSET ??_C@_0BH@MMMFMBDH@enter?5try?5block?5?4?4?4?4?4?6@
	call	_printf
	add	esp, 4

; 15   : 		result = x / y;

	mov	eax, DWORD PTR _x$[ebp]
	cdq
	idiv	DWORD PTR _y$[ebp]
	mov	DWORD PTR _result$[ebp], eax

; 16   : 		printf("This message will not occur .....\n");

	push	OFFSET ??_C@_0CD@JPAGMIHA@This?5message?5will?5not?5occur?5?4?4?4@
	call	_printf
	add	esp, 4

; 17   : 	}

	mov	DWORD PTR __$SEHRec$[ebp+20], -2	; fffffffeH
	jmp	SHORT $LN8@main
$LN5@main:
$LN13@main:

; 18   : 	__except (EXCEPTION_EXECUTE_HANDLER) 

	mov	eax, 1
$LN7@main:
$LN12@main:
	ret	0
$LN6@main:
	mov	esp, DWORD PTR __$SEHRec$[ebp]

; 19   : 	//__except (EXCEPTION_CONTINUE_SEARCH) { }
; 20   : 	{
; 21   : 		printf("exception is processing  .... over \n");

	push	OFFSET ??_C@_0CF@NDLHPMFO@exception?5is?5processing?5?5?4?4?4?4?5o@
	call	_printf
	add	esp, 4

; 17   : 	}

	mov	DWORD PTR __$SEHRec$[ebp+20], -2	; fffffffeH
$LN8@main:

; 22   : 	}
; 23   : 	printf("program  continue ..... hello \n");

	push	OFFSET ??_C@_0CA@OIJMOIKJ@program?5?5continue?5?4?4?4?4?4?5hello?5?6@
	call	_printf
	add	esp, 4

; 24   : 
; 25   : 	return 0;

	xor	eax, eax
$LN4@main:

; 26   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@main:
	DD	1
	DD	$LN10@main
$LN10@main:
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN9@main
$LN9@main:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 954  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __AD6A91B7_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	esi, esp
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax

; 959  :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 960  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 961  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __AD6A91B7_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	mov	esi, esp
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 644  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __F66CEB67_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
