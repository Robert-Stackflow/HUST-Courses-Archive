; Listing generated by Microsoft (R) Optimizing Compiler Version 19.22.27905.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__782A81FA_1@c DB 01H
msvcjmc	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	f
PUBLIC	main
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_07MCEOOEII@hello?5?6@			; `string'
PUBLIC	??_C@_0BC@CGJODOKF@?$CFld?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?6@ ; `string'
PUBLIC	??_C@_0BB@BFNJFMJC@?$CFf?5?$CFd?5?$CFd?5?$CFd?5?5?$CFf?6@ ; `string'
PUBLIC	__real@400999999999999a
PUBLIC	__real@400b333333333333
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$f DD	imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$f
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+281
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT __real@400b333333333333
CONST	SEGMENT
__real@400b333333333333 DQ 0400b333333333333r	; 3.4
CONST	ENDS
;	COMDAT __real@400999999999999a
CONST	SEGMENT
__real@400999999999999a DQ 0400999999999999ar	; 3.2
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BB@BFNJFMJC@?$CFf?5?$CFd?5?$CFd?5?$CFd?5?5?$CFf?6@
CONST	SEGMENT
??_C@_0BB@BFNJFMJC@?$CFf?5?$CFd?5?$CFd?5?$CFd?5?5?$CFf?6@ DB '%f %d %d %d'
	DB	'  %f', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CGJODOKF@?$CFld?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?6@
CONST	SEGMENT
??_C@_0BC@CGJODOKF@?$CFld?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?6@ DB '%ld %d %d '
	DB	'%d %d ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07MCEOOEII@hello?5?6@
CONST	SEGMENT
??_C@_07MCEOOEII@hello?5?6@ DB 'hello ', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	035051e01H
	DD	010a330fH
	DD	070030043H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$f DD	025051e01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 025054a19H
	DD	011d2322H
	DD	070160025H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
printf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
printf$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:printf$rtcName$0
	ORG $+48
printf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:printf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 035053901H
	DD	011d3322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\新书示例\64 位实验\Project1\Project1\1.c
;	COMDAT main
_TEXT	SEGMENT
f1$ = 8
f2$ = 40
f3$ = 72
x$ = 100
y$ = 132
u$ = 164
v$ = 196
w$ = 228
z$ = 260
main	PROC						; COMDAT

; 8    : {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 536				; 00000218H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__782A81FA_1@c
	call	__CheckForDebuggerJustMyCode

; 9    : 	double f1 = 3.2;

	movsd	xmm0, QWORD PTR __real@400999999999999a
	movsd	QWORD PTR f1$[rbp], xmm0

; 10   : 	double f2 = 3.4;

	movsd	xmm0, QWORD PTR __real@400b333333333333
	movsd	QWORD PTR f2$[rbp], xmm0

; 11   : 	double f3;
; 12   : 	int  x = 10;

	mov	DWORD PTR x$[rbp], 10

; 13   : 	int y = 20;

	mov	DWORD PTR y$[rbp], 20

; 14   : 	int  u = 30;

	mov	DWORD PTR u$[rbp], 30

; 15   : 	int  v = 40;

	mov	DWORD PTR v$[rbp], 40			; 00000028H

; 16   : 	int  w = 50;

	mov	DWORD PTR w$[rbp], 50			; 00000032H

; 17   : 	f();

	call	f

; 18   : //	__int64 z = x + y;
; 19   : 	int z;
; 20   : 	z = x + y;

	mov	eax, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR z$[rbp], eax

; 21   : 	f3 = f2 + f1;

	movsd	xmm0, QWORD PTR f2$[rbp]
	addsd	xmm0, QWORD PTR f1$[rbp]
	movsd	QWORD PTR f3$[rbp], xmm0

; 22   : 	printf("hello \n");

	lea	rcx, OFFSET FLAT:??_C@_07MCEOOEII@hello?5?6@
	call	printf

; 23   : 
; 24   : 	printf("%ld %d %d %d %d \n", x, y, z, u, v);

	mov	eax, DWORD PTR v$[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	eax, DWORD PTR u$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR z$[rbp]
	mov	r8d, DWORD PTR y$[rbp]
	mov	edx, DWORD PTR x$[rbp]
	lea	rcx, OFFSET FLAT:??_C@_0BC@CGJODOKF@?$CFld?5?$CFd?5?$CFd?5?$CFd?5?$CFd?5?6@
	call	printf

; 25   : 
; 26   : 	printf("%f %d %d %d  %f\n", f1,x,y,z,f2);

	movsd	xmm0, QWORD PTR f2$[rbp]
	movsd	QWORD PTR [rsp+40], xmm0
	mov	eax, DWORD PTR z$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR y$[rbp]
	mov	r8d, DWORD PTR x$[rbp]
	movsd	xmm1, QWORD PTR f1$[rbp]
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:??_C@_0BB@BFNJFMJC@?$CFf?5?$CFd?5?$CFd?5?$CFd?5?5?$CFf?6@
	call	printf

; 27   : 	return 0;

	xor	eax, eax

; 28   : }

	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\新书示例\64 位实验\Project1\Project1\1.c
;	COMDAT f
_TEXT	SEGMENT
x$ = 4
f	PROC						; COMDAT

; 3    : {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__782A81FA_1@c
	call	__CheckForDebuggerJustMyCode

; 4    : 	int  x;
; 5    : 	x = 20;

	mov	DWORD PTR x$[rbp], 20

; 6    : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 4
_ArgList$ = 40
__$ArrayPad$ = 248
_Format$ = 288
printf	PROC						; COMDAT

; 954  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__AD6A91B7_stdio@h
	call	__CheckForDebuggerJustMyCode

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

	lea	rax, QWORD PTR _Format$[rbp+8]
	mov	QWORD PTR _ArgList$[rbp], rax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	mov	r9, QWORD PTR _ArgList$[rbp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rbp]
	mov	rcx, rax
	call	_vfprintf_l
	mov	DWORD PTR _Result$[rbp], eax

; 959  :         __crt_va_end(_ArgList);

	mov	QWORD PTR _ArgList$[rbp], 0

; 960  :         return _Result;

	mov	eax, DWORD PTR _Result$[rbp]

; 961  :     }

	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:printf$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 224
_Format$ = 232
_Locale$ = 240
_ArgList$ = 248
_vfprintf_l PROC					; COMDAT

; 642  :     {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__AD6A91B7_stdio@h
	call	__CheckForDebuggerJustMyCode

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	call	__local_stdio_printf_options
	mov	rcx, QWORD PTR _ArgList$[rbp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Locale$[rbp]
	mov	r8, QWORD PTR _Format$[rbp]
	mov	rdx, QWORD PTR _Stream$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vfprintf

; 644  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__F66CEB67_corecrt_stdio_config@h
	call	__CheckForDebuggerJustMyCode

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
