int search(int x, int[] A, int n)
//@requires 0 <= n && n <= \length(A);
//@requires is_sorted(A, 0, n);
/*@ensures (-1 == \result && !is_in(x, A, 0, n)) //by (14.1) (14.2) (3) and (18) (17) (3)
        || ((0 <= \result && \result < n)        // by (13.2) (10.1) (9.2)
            && A[\result] == x);                 // by (13.1) (13.2)
  @*/
{
  for (int i = 0; i < n; i++)
    //@loop_invariant 0 <= i && i <= n;          /* by (10.1) [not 10.2!] (9.1) (9.2) (9.3) (2.1) */
    //@loop_invariant i == 0 || x > A[i-1];      /* by (9.1) (9.3) (15) */
    {
      if (A[i] == x) return i;
      else if (x < A[i]) return -1;
      //@assert A[i] < x;                        /* by (13.1) (14.1) */
    }
  //@assert n == 0 || x > A[n-1];                /* by (9.2) (10.2) (11) */
  return -1;
}